From 8ccb12688b8e3a282d0129451078b9fbcf62535d Mon Sep 17 00:00:00 2001
From: Greg McCarthy <greg@gjmccarthy.co.uk>
Date: Sun, 31 Dec 2017 12:15:11 +0000
Subject: [PATCH] Update all-098

---
 xbmc/Application.cpp | 11 ++++++++++-
 xbmc/Application.h   |  3 +++
 2 files changed, 13 insertions(+), 1 deletion(-)

diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index 5c401219d7..08a7529334 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -1486,13 +1486,22 @@ void CApplication::ReloadSkin(bool confirm/*=false*/)
   if (!g_SkinInfo || m_bInitializing)
     return; // Don't allow reload before skin is loaded by system
 
+  if (m_SkinReloading) {
+    CLog::Log(LOGINFO, "Suppressing skin reload as we are already doing so");
+    return;
+  }
+
   std::string oldSkin = g_SkinInfo->ID();
 
   CGUIMessage msg(GUI_MSG_LOAD_SKIN, -1, g_windowManager.GetActiveWindow());
   g_windowManager.SendMessage(msg);
 
   std::string newSkin = m_ServiceManager->GetSettings().GetString(CSettings::SETTING_LOOKANDFEEL_SKIN);
-  if (LoadSkin(newSkin))
+  m_SkinReloading = true;
+  bool skinLoaded = LoadSkin(newSkin);
+  m_SkinReloading = false;
+  
+  if (skinLoaded)
   {
     /* The Reset() or SetString() below will cause recursion, so the m_confirmSkinChange boolean is set so as to not prompt the
        user as to whether they want to keep the current skin. */
diff --git a/xbmc/Application.h b/xbmc/Application.h
index 9d0b2d46db..3683a58fa2 100644
--- a/xbmc/Application.h
+++ b/xbmc/Application.h
@@ -371,6 +371,9 @@ public:
 
   std::unique_ptr<CServiceManager> m_ServiceManager;
 
+  /*! \Ensure that we only handle one request to reload the skin at once */
+  bool m_SkinReloading;
+
   /*!
   \brief Locks calls from outside kodi (e.g. python) until framemove is processed.
   */
-- 
2.12.3

