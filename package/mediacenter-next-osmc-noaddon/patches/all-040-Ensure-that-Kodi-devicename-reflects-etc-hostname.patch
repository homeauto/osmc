From aaddff915df03a3cb99ee6b9849aa9a861da55f2 Mon Sep 17 00:00:00 2001
From: Sam Nazarko <email@samnazarko.co.uk>
Date: Sun, 20 Sep 2015 14:40:24 +0100
Subject: [PATCH] Ensure that Kodi's 'services.devicename' reflects
 /etc/hostname:

* Set the device name from the hostname at startup
* Ensure callback handles changes to this and updates /etc/hostname if changed in GUI

Do not worry about /etc/hosts as libnss-myhostname should handle this.

Signed-off-by: Sam Nazarko <email@samnazarko.co.uk>
---
 xbmc/Application.cpp             |  1 +
 xbmc/GUIInfoManager.cpp          |  6 +++++-
 xbmc/network/NetworkServices.cpp | 17 +++++++++++++++++
 xbmc/settings/Settings.cpp       |  1 +
 5 files changed, 25 insertions(+), 2 deletions(-)

diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index 0e6bd95..07ee861 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -652,6 +652,7 @@ bool CApplication::Create()
     return false;
   }
   m_ServiceManager->GetSettings().SetLoaded();
+  m_ServiceManager->GetSettings().SetString(CSettings::SETTING_SERVICES_DEVICENAME, hostname);

   CLog::Log(LOGINFO, "creating subdirectories");
   CLog::Log(LOGINFO, "userdata folder: %s", CURL::GetRedacted(CProfilesManager::GetInstance().GetProfileUserDataFolder()).c_str());
diff --git a/xbmc/GUIInfoManager.cpp b/xbmc/GUIInfoManager.cpp
index 8db6a24..7d63cf7 100644
--- a/xbmc/GUIInfoManager.cpp
+++ b/xbmc/GUIInfoManager.cpp
@@ -6379,7 +6379,11 @@ std::string CGUIInfoManager::GetLabel(int info, int contextWindow, std::string *
     }
     break;
   case SYSTEM_FRIENDLY_NAME:
-    strLabel = CSysInfo::GetDeviceName();
+    {
+      std::string hostname("osmc");
+      g_application.getNetwork().GetHostName(hostname);
+      strLabel = hostname.c_str();
+    }
     break;
   case SYSTEM_STEREOSCOPIC_MODE:
     {
diff --git a/xbmc/network/NetworkServices.cpp b/xbmc/network/NetworkServices.cpp
index 6c58426..07babe9 100644
--- a/xbmc/network/NetworkServices.cpp
+++ b/xbmc/network/NetworkServices.cpp
@@ -448,6 +448,23 @@ void CNetworkServices::OnSettingChanged(const CSetting *setting)
       CApplicationMessenger::GetInstance().PostMsg(TMSG_RESTARTAPP);
     }
   }
+
+  if (settingId == "services.devicename")
+  {
+     std::string newHostName = CServiceBroker::GetSettings().GetString("services.devicename");
+     FILE *fp;
+     fp = fopen("/tmp/hostname", "w");
+     if (fp)
+     {
+         fprintf(fp, "%s", newHostName.c_str());
+         fclose(fp);
+     }
+     else
+         return;
+     system("/usr/bin/sudo /bin/mv /tmp/hostname /etc/hostname");
+     system("/usr/bin/sudo /bin/hostname -F /etc/hostname");
+  }
+
 }
 
 bool CNetworkServices::OnSettingUpdate(CSetting* &setting, const char *oldSettingId, const TiXmlNode *oldSettingNode)
diff --git a/xbmc/settings/Settings.cpp b/xbmc/settings/Settings.cpp
index 7d6bd35..4ed74a4 100644
--- a/xbmc/settings/Settings.cpp 
+++ b/xbmc/settings/Settings.cpp
@@ -1168,6 +1168,7 @@ void CSettings::InitializeISettingCallbacks()
   settingSet.insert(CSettings::SETTING_SERVICES_ESCONTINUOUSDELAY);
   settingSet.insert(CSettings::SETTING_SMB_WINSSERVER);
   settingSet.insert(CSettings::SETTING_SMB_WORKGROUP);
+  settingSet.insert(CSettings::SETTING_SERVICES_DEVICENAME);
   GetSettingsManager()->RegisterCallback(&CNetworkServices::GetInstance(), settingSet); 
   
   settingSet.clear();
--
2.7.4
